-- This testBench was generated by pyVhdl2Sch --
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_unsigned.all;


-- entity declaration
ENTITY tb_VGASync IS
END tb_VGASync;

ARCHITECTURE behavior OF tb_VGASync IS
-- Component Declaration for the Unit Under Test (UUT)
COMPONENT VGASync
PORT (
    VGAClk : IN STD_LOGIC;
    currentX : OUT INTEGER;
    currentY : OUT INTEGER;
    drawAvailable : OUT STD_LOGIC;
    hSync : OUT STD_LOGIC;
    vSync : OUT STD_LOGIC
);
END COMPONENT;
-- declare inputs and initialize them
    signal VGAClk : STD_LOGIC;
-- declare inouts and initialize them
-- declare outputs and initialize them
    signal currentX : INTEGER;
    signal currentY : INTEGER;
    signal drawAvailable : STD_LOGIC;
    signal hSync : STD_LOGIC;
    signal vSync : STD_LOGIC;
constant clk_period : time := 10 ns;
signal VGAClkCounter : INTEGER := 1; -- 1 because we will already have done 1 tick
BEGIN
-- Instantiate the Unit Under Test (UUT)
uut: VGASync PORT MAP (
    VGAClk => VGAClk,
    currentX => currentX,
    currentY => currentY,
    drawAvailable => drawAvailable,
    hSync => hSync,
    vSync => vSync
);
-- Clock process definitions( clock with 50% duty cycle is generated here.)
clk_process :process
begin
    VGAClk <= '0';
    wait for clk_period/2;  --for 5 ns signal is '0'.
    VGAClk <= '1';
    VGAClkCounter <= VGAClkCounter + 1;
    wait for clk_period/2;  --for 5 ns signal is '1'.
end process;
END;